// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render PageNotFound on a 404 page 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntrie={
      Array [
        "/404",
      ]
    }
    initialIndex={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "wc9j9x",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "wc9j9x",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Routes)>
        <Routes
          dispatch={[Function]}
          login={
            Object {
              "errorMessage": false,
              "pending": false,
              "token": false,
              "userAuthenticated": false,
            }
          }
        >
          <BrowserRouter>
            <Router
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <Switch>
                <Route
                  component={[Function]}
                  computedMatch={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                  exact={true}
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  path="/"
                >
                  <LoginPage
                    history={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                    location={
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      }
                    }
                    match={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      }
                    }
                  >
                    <div
                      className="loginPage"
                    >
                      <div
                        className="container"
                      >
                        <img
                          alt="Testio logo"
                          className="logo"
                          src="logo-white.png"
                        />
                        <Connect(ReduxForm)>
                          <ReduxForm
                            Login={[Function]}
                            login={
                              Object {
                                "errorMessage": false,
                                "pending": false,
                                "token": false,
                                "userAuthenticated": false,
                              }
                            }
                          >
                            <Connect(Form(Form))
                              Login={[Function]}
                              destroyOnUnmount={true}
                              enableReinitialize={false}
                              forceUnregisterOnUnmount={false}
                              form="login"
                              getFormState={[Function]}
                              keepDirtyOnReinitialize={false}
                              login={
                                Object {
                                  "errorMessage": false,
                                  "pending": false,
                                  "token": false,
                                  "userAuthenticated": false,
                                }
                              }
                              persistentSubmitErrors={false}
                              pure={true}
                              shouldAsyncValidate={[Function]}
                              shouldValidate={[Function]}
                              touchOnBlur={true}
                              touchOnChange={false}
                            >
                              <Form(Form)
                                Login={[Function]}
                                anyTouched={false}
                                array={
                                  Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  }
                                }
                                arrayInsert={[Function]}
                                arrayMove={[Function]}
                                arrayPop={[Function]}
                                arrayPush={[Function]}
                                arrayRemove={[Function]}
                                arrayRemoveAll={[Function]}
                                arrayShift={[Function]}
                                arraySplice={[Function]}
                                arraySwap={[Function]}
                                arrayUnshift={[Function]}
                                asyncValidating={false}
                                autofill={[Function]}
                                blur={[Function]}
                                change={[Function]}
                                clearAsyncError={[Function]}
                                clearSubmit={[Function]}
                                clearSubmitErrors={[Function]}
                                destroy={[Function]}
                                destroyOnUnmount={true}
                                dirty={false}
                                dispatch={[Function]}
                                enableReinitialize={false}
                                focus={[Function]}
                                forceUnregisterOnUnmount={false}
                                form="login"
                                getFormState={[Function]}
                                initialize={[Function]}
                                initialized={false}
                                invalid={false}
                                keepDirtyOnReinitialize={false}
                                login={
                                  Object {
                                    "errorMessage": false,
                                    "pending": false,
                                    "token": false,
                                    "userAuthenticated": false,
                                  }
                                }
                                persistentSubmitErrors={false}
                                pristine={true}
                                pure={true}
                                registerField={[Function]}
                                registeredFields={
                                  Object {
                                    "password": Object {
                                      "count": 1,
                                      "name": "password",
                                      "type": "Field",
                                    },
                                    "username": Object {
                                      "count": 1,
                                      "name": "username",
                                      "type": "Field",
                                    },
                                  }
                                }
                                reset={[Function]}
                                setSubmitFailed={[Function]}
                                setSubmitSucceeded={[Function]}
                                shouldAsyncValidate={[Function]}
                                shouldValidate={[Function]}
                                startAsyncValidation={[Function]}
                                startSubmit={[Function]}
                                stopAsyncValidation={[Function]}
                                stopSubmit={[Function]}
                                submit={[Function]}
                                submitFailed={false}
                                submitSucceeded={false}
                                submitting={false}
                                syncErrors={Object {}}
                                syncWarnings={Object {}}
                                touch={[Function]}
                                touchOnBlur={true}
                                touchOnChange={false}
                                unregisterField={[Function]}
                                untouch={[Function]}
                                updateSyncErrors={[Function]}
                                updateSyncWarnings={[Function]}
                                valid={true}
                                validExceptSubmit={true}
                                values={Object {}}
                              >
                                <Form
                                  Login={[Function]}
                                  anyTouched={false}
                                  array={
                                    Object {
                                      "insert": [Function],
                                      "move": [Function],
                                      "pop": [Function],
                                      "push": [Function],
                                      "remove": [Function],
                                      "removeAll": [Function],
                                      "shift": [Function],
                                      "splice": [Function],
                                      "swap": [Function],
                                      "unshift": [Function],
                                    }
                                  }
                                  asyncValidate={[Function]}
                                  asyncValidating={false}
                                  autofill={[Function]}
                                  blur={[Function]}
                                  change={[Function]}
                                  clearAsyncError={[Function]}
                                  clearSubmit={[Function]}
                                  clearSubmitErrors={[Function]}
                                  destroy={[Function]}
                                  dirty={false}
                                  dispatch={[Function]}
                                  form="login"
                                  handleSubmit={[Function]}
                                  initialize={[Function]}
                                  initialized={false}
                                  invalid={false}
                                  login={
                                    Object {
                                      "errorMessage": false,
                                      "pending": false,
                                      "token": false,
                                      "userAuthenticated": false,
                                    }
                                  }
                                  pristine={true}
                                  pure={true}
                                  reset={[Function]}
                                  submit={[Function]}
                                  submitFailed={false}
                                  submitSucceeded={false}
                                  submitting={false}
                                  touch={[Function]}
                                  untouch={[Function]}
                                  valid={true}
                                >
                                  <div
                                    className="form"
                                  >
                                    <form
                                      onSubmit={[Function]}
                                    >
                                      <Field
                                        className="form-control"
                                        component={[Function]}
                                        icon={<UsernameIcon />}
                                        name="username"
                                        placeholder="Username"
                                        type="text"
                                      >
                                        <Connect(ConnectedField)
                                          _reduxForm={
                                            Object {
                                              "Login": [Function],
                                              "anyTouched": false,
                                              "array": Object {
                                                "insert": [Function],
                                                "move": [Function],
                                                "pop": [Function],
                                                "push": [Function],
                                                "remove": [Function],
                                                "removeAll": [Function],
                                                "shift": [Function],
                                                "splice": [Function],
                                                "swap": [Function],
                                                "unshift": [Function],
                                              },
                                              "arrayInsert": [Function],
                                              "arrayMove": [Function],
                                              "arrayPop": [Function],
                                              "arrayPush": [Function],
                                              "arrayRemove": [Function],
                                              "arrayRemoveAll": [Function],
                                              "arrayShift": [Function],
                                              "arraySplice": [Function],
                                              "arraySwap": [Function],
                                              "arrayUnshift": [Function],
                                              "asyncErrors": undefined,
                                              "asyncValidate": [Function],
                                              "asyncValidating": false,
                                              "autofill": [Function],
                                              "blur": [Function],
                                              "change": [Function],
                                              "clearAsyncError": [Function],
                                              "clearSubmit": [Function],
                                              "clearSubmitErrors": [Function],
                                              "destroy": [Function],
                                              "destroyOnUnmount": true,
                                              "dirty": false,
                                              "dispatch": [Function],
                                              "enableReinitialize": false,
                                              "error": undefined,
                                              "focus": [Function],
                                              "forceUnregisterOnUnmount": false,
                                              "form": "login",
                                              "getFormState": [Function],
                                              "getValues": [Function],
                                              "initialValues": undefined,
                                              "initialize": [Function],
                                              "initialized": false,
                                              "invalid": false,
                                              "keepDirtyOnReinitialize": false,
                                              "login": Object {
                                                "errorMessage": false,
                                                "pending": false,
                                                "token": false,
                                                "userAuthenticated": false,
                                              },
                                              "persistentSubmitErrors": false,
                                              "pristine": true,
                                              "pure": true,
                                              "register": [Function],
                                              "registerField": [Function],
                                              "registerInnerOnSubmit": [Function],
                                              "registeredFields": undefined,
                                              "reset": [Function],
                                              "sectionPrefix": undefined,
                                              "setSubmitFailed": [Function],
                                              "setSubmitSucceeded": [Function],
                                              "shouldAsyncValidate": [Function],
                                              "shouldValidate": [Function],
                                              "startAsyncValidation": [Function],
                                              "startSubmit": [Function],
                                              "stopAsyncValidation": [Function],
                                              "stopSubmit": [Function],
                                              "submit": [Function],
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "submitting": false,
                                              "syncErrors": Object {},
                                              "syncWarnings": Object {},
                                              "touch": [Function],
                                              "touchOnBlur": true,
                                              "touchOnChange": false,
                                              "triggerSubmit": undefined,
                                              "unregister": [Function],
                                              "unregisterField": [Function],
                                              "untouch": [Function],
                                              "updateSyncErrors": [Function],
                                              "updateSyncWarnings": [Function],
                                              "valid": true,
                                              "validExceptSubmit": true,
                                              "values": Object {},
                                              "warning": undefined,
                                            }
                                          }
                                          className="form-control"
                                          component={[Function]}
                                          icon={<UsernameIcon />}
                                          name="username"
                                          normalize={[Function]}
                                          placeholder="Username"
                                          type="text"
                                        >
                                          <ConnectedField
                                            _reduxForm={
                                              Object {
                                                "Login": [Function],
                                                "anyTouched": false,
                                                "array": Object {
                                                  "insert": [Function],
                                                  "move": [Function],
                                                  "pop": [Function],
                                                  "push": [Function],
                                                  "remove": [Function],
                                                  "removeAll": [Function],
                                                  "shift": [Function],
                                                  "splice": [Function],
                                                  "swap": [Function],
                                                  "unshift": [Function],
                                                },
                                                "arrayInsert": [Function],
                                                "arrayMove": [Function],
                                                "arrayPop": [Function],
                                                "arrayPush": [Function],
                                                "arrayRemove": [Function],
                                                "arrayRemoveAll": [Function],
                                                "arrayShift": [Function],
                                                "arraySplice": [Function],
                                                "arraySwap": [Function],
                                                "arrayUnshift": [Function],
                                                "asyncErrors": undefined,
                                                "asyncValidate": [Function],
                                                "asyncValidating": false,
                                                "autofill": [Function],
                                                "blur": [Function],
                                                "change": [Function],
                                                "clearAsyncError": [Function],
                                                "clearSubmit": [Function],
                                                "clearSubmitErrors": [Function],
                                                "destroy": [Function],
                                                "destroyOnUnmount": true,
                                                "dirty": false,
                                                "dispatch": [Function],
                                                "enableReinitialize": false,
                                                "error": undefined,
                                                "focus": [Function],
                                                "forceUnregisterOnUnmount": false,
                                                "form": "login",
                                                "getFormState": [Function],
                                                "getValues": [Function],
                                                "initialValues": undefined,
                                                "initialize": [Function],
                                                "initialized": false,
                                                "invalid": false,
                                                "keepDirtyOnReinitialize": false,
                                                "login": Object {
                                                  "errorMessage": false,
                                                  "pending": false,
                                                  "token": false,
                                                  "userAuthenticated": false,
                                                },
                                                "persistentSubmitErrors": false,
                                                "pristine": true,
                                                "pure": true,
                                                "register": [Function],
                                                "registerField": [Function],
                                                "registerInnerOnSubmit": [Function],
                                                "registeredFields": undefined,
                                                "reset": [Function],
                                                "sectionPrefix": undefined,
                                                "setSubmitFailed": [Function],
                                                "setSubmitSucceeded": [Function],
                                                "shouldAsyncValidate": [Function],
                                                "shouldValidate": [Function],
                                                "startAsyncValidation": [Function],
                                                "startSubmit": [Function],
                                                "stopAsyncValidation": [Function],
                                                "stopSubmit": [Function],
                                                "submit": [Function],
                                                "submitFailed": false,
                                                "submitSucceeded": false,
                                                "submitting": false,
                                                "syncErrors": Object {},
                                                "syncWarnings": Object {},
                                                "touch": [Function],
                                                "touchOnBlur": true,
                                                "touchOnChange": false,
                                                "triggerSubmit": undefined,
                                                "unregister": [Function],
                                                "unregisterField": [Function],
                                                "untouch": [Function],
                                                "updateSyncErrors": [Function],
                                                "updateSyncWarnings": [Function],
                                                "valid": true,
                                                "validExceptSubmit": true,
                                                "values": Object {},
                                                "warning": undefined,
                                              }
                                            }
                                            asyncValidating={false}
                                            className="form-control"
                                            component={[Function]}
                                            dirty={false}
                                            dispatch={[Function]}
                                            icon={<UsernameIcon />}
                                            name="username"
                                            normalize={[Function]}
                                            placeholder="Username"
                                            pristine={true}
                                            type="text"
                                          >
                                            <Component
                                              className="form-control"
                                              icon={<UsernameIcon />}
                                              input={
                                                Object {
                                                  "name": "username",
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onDragStart": [Function],
                                                  "onDrop": [Function],
                                                  "onFocus": [Function],
                                                  "value": "",
                                                }
                                              }
                                              meta={
                                                Object {
                                                  "active": false,
                                                  "asyncValidating": false,
                                                  "autofilled": false,
                                                  "dirty": false,
                                                  "dispatch": [Function],
                                                  "error": undefined,
                                                  "form": "login",
                                                  "initial": undefined,
                                                  "invalid": false,
                                                  "pristine": true,
                                                  "submitFailed": false,
                                                  "submitting": false,
                                                  "touched": false,
                                                  "valid": true,
                                                  "visited": false,
                                                  "warning": undefined,
                                                }
                                              }
                                              placeholder="Username"
                                              type="text"
                                            >
                                              <div
                                                className="form-group"
                                              >
                                                <div
                                                  className="input"
                                                >
                                                  <UsernameIcon>
                                                    <svg
                                                      className="username-icon"
                                                      height="16"
                                                      viewBox="0 0 14 16"
                                                      width="14"
                                                    >
                                                      <path
                                                        d="M582,383a4,4,0,0,0-4,4v1a4,4,0,0,0,8,0v-1A4,4,0,0,0,582,383Zm4.036,9.426a5.961,5.961,0,0,1-8.072,0A3.859,3.859,0,0,0,575,396v3h14v-3A3.859,3.859,0,0,0,586.036,392.426Z"
                                                        id="ico-username"
                                                        transform="translate(-575 -383)"
                                                      />
                                                    </svg>
                                                  </UsernameIcon>
                                                  <input
                                                    className="form-control"
                                                    name="username"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onDragStart={[Function]}
                                                    onDrop={[Function]}
                                                    onFocus={[Function]}
                                                    placeholder="Username"
                                                    type="text"
                                                    value=""
                                                  />
                                                </div>
                                              </div>
                                            </Component>
                                          </ConnectedField>
                                        </Connect(ConnectedField)>
                                      </Field>
                                      <Field
                                        className="form-control"
                                        component={[Function]}
                                        icon={<PasswordIcon />}
                                        name="password"
                                        placeholder="Password"
                                        type="password"
                                      >
                                        <Connect(ConnectedField)
                                          _reduxForm={
                                            Object {
                                              "Login": [Function],
                                              "anyTouched": false,
                                              "array": Object {
                                                "insert": [Function],
                                                "move": [Function],
                                                "pop": [Function],
                                                "push": [Function],
                                                "remove": [Function],
                                                "removeAll": [Function],
                                                "shift": [Function],
                                                "splice": [Function],
                                                "swap": [Function],
                                                "unshift": [Function],
                                              },
                                              "arrayInsert": [Function],
                                              "arrayMove": [Function],
                                              "arrayPop": [Function],
                                              "arrayPush": [Function],
                                              "arrayRemove": [Function],
                                              "arrayRemoveAll": [Function],
                                              "arrayShift": [Function],
                                              "arraySplice": [Function],
                                              "arraySwap": [Function],
                                              "arrayUnshift": [Function],
                                              "asyncErrors": undefined,
                                              "asyncValidate": [Function],
                                              "asyncValidating": false,
                                              "autofill": [Function],
                                              "blur": [Function],
                                              "change": [Function],
                                              "clearAsyncError": [Function],
                                              "clearSubmit": [Function],
                                              "clearSubmitErrors": [Function],
                                              "destroy": [Function],
                                              "destroyOnUnmount": true,
                                              "dirty": false,
                                              "dispatch": [Function],
                                              "enableReinitialize": false,
                                              "error": undefined,
                                              "focus": [Function],
                                              "forceUnregisterOnUnmount": false,
                                              "form": "login",
                                              "getFormState": [Function],
                                              "getValues": [Function],
                                              "initialValues": undefined,
                                              "initialize": [Function],
                                              "initialized": false,
                                              "invalid": false,
                                              "keepDirtyOnReinitialize": false,
                                              "login": Object {
                                                "errorMessage": false,
                                                "pending": false,
                                                "token": false,
                                                "userAuthenticated": false,
                                              },
                                              "persistentSubmitErrors": false,
                                              "pristine": true,
                                              "pure": true,
                                              "register": [Function],
                                              "registerField": [Function],
                                              "registerInnerOnSubmit": [Function],
                                              "registeredFields": undefined,
                                              "reset": [Function],
                                              "sectionPrefix": undefined,
                                              "setSubmitFailed": [Function],
                                              "setSubmitSucceeded": [Function],
                                              "shouldAsyncValidate": [Function],
                                              "shouldValidate": [Function],
                                              "startAsyncValidation": [Function],
                                              "startSubmit": [Function],
                                              "stopAsyncValidation": [Function],
                                              "stopSubmit": [Function],
                                              "submit": [Function],
                                              "submitFailed": false,
                                              "submitSucceeded": false,
                                              "submitting": false,
                                              "syncErrors": Object {},
                                              "syncWarnings": Object {},
                                              "touch": [Function],
                                              "touchOnBlur": true,
                                              "touchOnChange": false,
                                              "triggerSubmit": undefined,
                                              "unregister": [Function],
                                              "unregisterField": [Function],
                                              "untouch": [Function],
                                              "updateSyncErrors": [Function],
                                              "updateSyncWarnings": [Function],
                                              "valid": true,
                                              "validExceptSubmit": true,
                                              "values": Object {},
                                              "warning": undefined,
                                            }
                                          }
                                          className="form-control"
                                          component={[Function]}
                                          icon={<PasswordIcon />}
                                          name="password"
                                          normalize={[Function]}
                                          placeholder="Password"
                                          type="password"
                                        >
                                          <ConnectedField
                                            _reduxForm={
                                              Object {
                                                "Login": [Function],
                                                "anyTouched": false,
                                                "array": Object {
                                                  "insert": [Function],
                                                  "move": [Function],
                                                  "pop": [Function],
                                                  "push": [Function],
                                                  "remove": [Function],
                                                  "removeAll": [Function],
                                                  "shift": [Function],
                                                  "splice": [Function],
                                                  "swap": [Function],
                                                  "unshift": [Function],
                                                },
                                                "arrayInsert": [Function],
                                                "arrayMove": [Function],
                                                "arrayPop": [Function],
                                                "arrayPush": [Function],
                                                "arrayRemove": [Function],
                                                "arrayRemoveAll": [Function],
                                                "arrayShift": [Function],
                                                "arraySplice": [Function],
                                                "arraySwap": [Function],
                                                "arrayUnshift": [Function],
                                                "asyncErrors": undefined,
                                                "asyncValidate": [Function],
                                                "asyncValidating": false,
                                                "autofill": [Function],
                                                "blur": [Function],
                                                "change": [Function],
                                                "clearAsyncError": [Function],
                                                "clearSubmit": [Function],
                                                "clearSubmitErrors": [Function],
                                                "destroy": [Function],
                                                "destroyOnUnmount": true,
                                                "dirty": false,
                                                "dispatch": [Function],
                                                "enableReinitialize": false,
                                                "error": undefined,
                                                "focus": [Function],
                                                "forceUnregisterOnUnmount": false,
                                                "form": "login",
                                                "getFormState": [Function],
                                                "getValues": [Function],
                                                "initialValues": undefined,
                                                "initialize": [Function],
                                                "initialized": false,
                                                "invalid": false,
                                                "keepDirtyOnReinitialize": false,
                                                "login": Object {
                                                  "errorMessage": false,
                                                  "pending": false,
                                                  "token": false,
                                                  "userAuthenticated": false,
                                                },
                                                "persistentSubmitErrors": false,
                                                "pristine": true,
                                                "pure": true,
                                                "register": [Function],
                                                "registerField": [Function],
                                                "registerInnerOnSubmit": [Function],
                                                "registeredFields": undefined,
                                                "reset": [Function],
                                                "sectionPrefix": undefined,
                                                "setSubmitFailed": [Function],
                                                "setSubmitSucceeded": [Function],
                                                "shouldAsyncValidate": [Function],
                                                "shouldValidate": [Function],
                                                "startAsyncValidation": [Function],
                                                "startSubmit": [Function],
                                                "stopAsyncValidation": [Function],
                                                "stopSubmit": [Function],
                                                "submit": [Function],
                                                "submitFailed": false,
                                                "submitSucceeded": false,
                                                "submitting": false,
                                                "syncErrors": Object {},
                                                "syncWarnings": Object {},
                                                "touch": [Function],
                                                "touchOnBlur": true,
                                                "touchOnChange": false,
                                                "triggerSubmit": undefined,
                                                "unregister": [Function],
                                                "unregisterField": [Function],
                                                "untouch": [Function],
                                                "updateSyncErrors": [Function],
                                                "updateSyncWarnings": [Function],
                                                "valid": true,
                                                "validExceptSubmit": true,
                                                "values": Object {},
                                                "warning": undefined,
                                              }
                                            }
                                            asyncValidating={false}
                                            className="form-control"
                                            component={[Function]}
                                            dirty={false}
                                            dispatch={[Function]}
                                            icon={<PasswordIcon />}
                                            name="password"
                                            normalize={[Function]}
                                            placeholder="Password"
                                            pristine={true}
                                            type="password"
                                          >
                                            <Component
                                              className="form-control"
                                              icon={<PasswordIcon />}
                                              input={
                                                Object {
                                                  "name": "password",
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onDragStart": [Function],
                                                  "onDrop": [Function],
                                                  "onFocus": [Function],
                                                  "value": "",
                                                }
                                              }
                                              meta={
                                                Object {
                                                  "active": false,
                                                  "asyncValidating": false,
                                                  "autofilled": false,
                                                  "dirty": false,
                                                  "dispatch": [Function],
                                                  "error": undefined,
                                                  "form": "login",
                                                  "initial": undefined,
                                                  "invalid": false,
                                                  "pristine": true,
                                                  "submitFailed": false,
                                                  "submitting": false,
                                                  "touched": false,
                                                  "valid": true,
                                                  "visited": false,
                                                  "warning": undefined,
                                                }
                                              }
                                              placeholder="Password"
                                              type="password"
                                            >
                                              <div
                                                className="form-group"
                                              >
                                                <div
                                                  className="input"
                                                >
                                                  <PasswordIcon>
                                                    <svg
                                                      className="password-icon"
                                                      height="18"
                                                      viewBox="0 0 14 18"
                                                      width="14"
                                                    >
                                                      <path
                                                        d="M582,458a4.012,4.012,0,0,0-4,4v3h-2a0.945,0.945,0,0,0-1,1v9a0.945,0.945,0,0,0,1,1h12a0.945,0.945,0,0,0,1-1v-9a0.945,0.945,0,0,0-1-1h-2v-3A4.012,4.012,0,0,0,582,458Zm2,7h-4v-3a2,2,0,0,1,4,0v3Zm-2,3a1,1,0,0,1,1,1v3a1,1,0,0,1-2,0v-3A1,1,0,0,1,582,468Z"
                                                        id="ico-lock"
                                                        transform="translate(-575 -458)"
                                                      />
                                                    </svg>
                                                  </PasswordIcon>
                                                  <input
                                                    className="form-control"
                                                    name="password"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onDragStart={[Function]}
                                                    onDrop={[Function]}
                                                    onFocus={[Function]}
                                                    placeholder="Password"
                                                    type="password"
                                                    value=""
                                                  />
                                                </div>
                                              </div>
                                            </Component>
                                          </ConnectedField>
                                        </Connect(ConnectedField)>
                                      </Field>
                                      <button
                                        className="btn"
                                        type="submit"
                                      >
                                        Log In
                                      </button>
                                    </form>
                                    <span />
                                  </div>
                                </Form>
                              </Form(Form)>
                            </Connect(Form(Form))>
                          </ReduxForm>
                        </Connect(ReduxForm)>
                      </div>
                    </div>
                  </LoginPage>
                </Route>
              </Switch>
            </Router>
          </BrowserRouter>
        </Routes>
      </Connect(Routes)>
    </Router>
  </MemoryRouter>
</Provider>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login component should render the Login component. 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <C
    error={null}
    errorDismiss={[Function]}
    errors={Object {}}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleSubmit={[Function]}
    isLoading={false}
    isSubmitting={false}
    login={[Function]}
    push={[Function]}
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "subscribe": [Function],
          }
    }
    storeSubscription={
        Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": undefined,
          }
    }
    token={null}
    touched={Object {}}
    values={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "displayName": "FORM_AUTH",
      "enableReinitialize": false,
      "error": null,
      "errorDismiss": [Function],
      "errors": Object {},
      "handleBlur": [Function],
      "handleChange": [Function],
      "handleSubmit": [Function],
      "initialValues": Object {
        "password": "",
        "username": "",
      },
      "isInitialValid": false,
      "isLoading": false,
      "isSubmitting": false,
      "login": [Function],
      "onSubmit": [Function],
      "push": [Function],
      "render": [Function],
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": undefined,
      },
      "token": null,
      "touched": Object {},
      "validate": undefined,
      "validateOnBlur": true,
      "validateOnChange": true,
      "validationSchema": [Function],
      "values": Object {},
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "displayName": "FORM_AUTH",
        "enableReinitialize": false,
        "error": null,
        "errorDismiss": [Function],
        "errors": Object {},
        "handleBlur": [Function],
        "handleChange": [Function],
        "handleSubmit": [Function],
        "initialValues": Object {
          "password": "",
          "username": "",
        },
        "isInitialValid": false,
        "isLoading": false,
        "isSubmitting": false,
        "login": [Function],
        "onSubmit": [Function],
        "push": [Function],
        "render": [Function],
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": undefined,
        },
        "token": null,
        "touched": Object {},
        "validate": undefined,
        "validateOnBlur": true,
        "validateOnChange": true,
        "validationSchema": [Function],
        "values": Object {},
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
